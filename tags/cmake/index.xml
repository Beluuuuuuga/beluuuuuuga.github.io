<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CMake on home</title>
    <link>https://beluuuuuuga.github.io/tags/cmake/</link>
    <description>Recent content in CMake on home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://beluuuuuuga.github.io/tags/cmake/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CMakeまとめ</title>
      <link>https://beluuuuuuga.github.io/post/2020/01/23/cmake%E3%81%BE%E3%81%A8%E3%82%81/</link>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://beluuuuuuga.github.io/post/2020/01/23/cmake%E3%81%BE%E3%81%A8%E3%82%81/</guid>
      <description>Examples Source: OpenCVの場合  CmakeLists.txt
cmake_minimum_required(VERSION 2.8) project( DisplayImage ) find_package( OpenCV REQUIRED ) include_directories( ${OpenCV_INCLUDE_DIRS} ) add_executable( DisplayImage DisplayImage.cpp ) target_link_libraries( DisplayImage ${OpenCV_LIBS} )  DisplayImage.cpp
#include &amp;quot;opencv2\\opencv.hpp&amp;quot; int _tmain(int argc, _TCHAR* argv[]) { //表示ウィンドウの作成 cvNamedWindow(&amp;quot;img&amp;quot;); //処理後画像データの確保 IplImage* img = cvCreateImage(cvSize(320,240), IPL_DEPTH_8U, 1); //白色 cvSet(img, cvScalarAll (255), 0); //画像の表示 cvShowImage (&amp;quot;img&amp;quot;, img); //キー入力待ち cvWaitKey (0); //全てのウィンドウの削除 cvDestroyAllWindows(); //画像データの解放 cvReleaseImage(&amp;amp;img); return 0; }  build/Debug/Display.exeファイルが作成されるので、実行し小さいwindowが作成されれば完了
Debug\DisplayImage.exe   Usages ビルド  buildディレクトリを作成し、移動 Visual Studioのバージョンによってビルド方法変更</description>
    </item>
    
  </channel>
</rss>